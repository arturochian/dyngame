sample.interval=20000
"ls" "loadedNamespaces" "match" "%in%" ".requirePackage" ".classDefEnv" "exists" "getClassDef" "is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"as.name" "eval" "FUN" "lapply" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"list" "act.fun" "init.x.groups" "init.game" 
"$.ListEnv" "$" "init.x.groups" "init.game" 
"init.x.groups" "init.game" 
"nchar" "parent.env.to.store" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"$" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"simplify2array" "sapply" "GridInd" "init.x.groups" "init.game" 
"is.null" "GridInd" "init.x.groups" "init.game" 
"$.ListEnv" "$" "init.x.groups" "init.game" 
"unlist" "simplify2array" "sapply" "init.x.groups" "init.game" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"act.fun" "init.x.groups" "init.game" 
"lapply" "unlist" "unique" "simplify2array" "sapply" "GridInd" "init.x.groups" "init.game" 
"get" "$.ListEnv" "$" "init.x.groups" "init.game" 
"pmatch" ".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"GridInd" "init.x.groups" "init.game" 
"GridInd" "init.x.groups" "init.game" 
"init.x.groups" "init.game" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"GridInd" "init.x.groups" "init.game" 
"store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"$.ListEnv" "$" "GridInd" "init.x.groups" "init.game" 
"unique" "simplify2array" "sapply" "GridInd" "init.x.groups" "init.game" 
"is.storing" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"GridInd" "init.x.groups" "init.game" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"GridInd" "init.x.groups" "init.game" 
"init.x.groups" "init.game" 
"sys.frame" "as.list" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"init.x.groups" "init.game" 
"FUN" "lapply" "sapply" "init.x.groups" "init.game" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.game" 
"unlist" "unique" "simplify2array" "sapply" "GridInd" "init.x.groups" "init.game" 
"init.x.groups" "init.game" 
"unlist" "simplify2array" "sapply" "init.x.groups" "init.ax" "init.game" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"new.ListEnv" "init.x.groups" "init.ax" "init.game" 
"init.x.groups" "init.ax" "init.game" 
"$<-" "init.x.groups" "init.ax" "init.game" 
"GridInd" "init.x.groups" "init.ax" "init.game" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"unique" "simplify2array" "sapply" "GridInd" "init.x.groups" "init.ax" "init.game" 
"GridInd" "init.x.groups" "init.ax" "init.game" 
"$" "init.x.groups" "init.ax" "init.game" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"get" "$.ListEnv" "$" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"%in%" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"rev" "rev" "GridInd" "init.x.groups" "init.ax" "init.game" 
"init.x.groups" "init.ax" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"$" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"c" "GridInd" "init.x.groups" "init.ax" "init.game" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"rev" "GridInd" "init.x.groups" "init.ax" "init.game" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"FUN" "lapply" "sapply" "init.x.groups" "init.ax" "init.game" 
"as.list" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"as.environment" "exists" "get.restore.point.options" "isTRUE" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"$.ListEnv" "$" "init.x.groups" "init.ax" "init.game" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"sapply" "init.x.groups" "init.ax" "init.game" 
"$<-" "init.x.groups" "init.ax" "init.game" 
"store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"lapply" "unlist" "unique" "simplify2array" "sapply" "init.x.groups" "init.ax" "init.game" 
"as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"GridInd" "init.x.groups" "init.ax" "init.game" 
"conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"sapply" "GridInd" "init.x.groups" "init.ax" "init.game" 
"rev" "rev" "GridInd" "init.x.groups" "init.ax" "init.game" 
"init.x.groups" "init.ax" "init.game" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"GridInd" "init.x.groups" "init.ax" "init.game" 
"prod" "GridInd" "init.x.groups" "init.ax" "init.game" 
"$<-" "init.x.groups" "init.ax" "init.game" 
"rev" "rev" "GridInd" "init.x.groups" "init.ax" "init.game" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "act.fun" "init.x.groups" "init.ax" "init.game" 
"$.ListEnv" "$" "init.x.groups" "init.ax" "init.game" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"$" "cbind" "init.ax" "init.game" 
"$.ListEnv" "$" "cbind" "init.ax" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"$" "rows.to.v.ind" "init.ax" "init.game" 
"init.ax" "init.game" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"get" "$.ListEnv" "$" "init.ax" "init.game" 
"match.fun" "sapply" "unlist" "rows.to.v.ind" "init.ax" "init.game" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"$" "rows.to.v.ind" "init.ax" "init.game" 
"get" "$.ListEnv" "$" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"sys.nframe" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"new.env" "list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"length" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"$.ListEnv" "$" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"identical" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"as.environment" "copy.fun" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "rows.to.v.ind" "init.ax" "init.game" 
"init.replies" "init.game" 
"init.replies" "init.game" 
"$" "init.replies" "init.game" 
"make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"init.replies" "init.game" 
"prod" "gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"init.replies" "init.game" 
"init.replies" "init.game" 
"make.replies.gi" "init.replies" "init.game" 
"$" "gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"$<-" "init.replies" "init.game" 
"$<-" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"$.ListEnv" "$" "init.replies" "init.game" 
"$<-" "init.replies" "init.game" 
"$" "init.replies" "init.game" 
"$.ListEnv" "$" "init.replies" "init.game" 
"$.ListEnv" "$" "init.replies" "init.game" 
"GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"which" "make.replies.gi" "init.replies" "init.game" 
"unlist" "simplify2array" "sapply" "GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"init.replies" "init.game" 
"gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"sapply" "GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"is.factor" "unique.default" "unique" "simplify2array" "sapply" "GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"$" "order" "matrix" "make.replies.gi" "init.replies" "init.game" 
"order" "matrix" "make.replies.gi" "init.replies" "init.game" 
"$<-" "init.replies" "init.game" 
"unlist" "simplify2array" "sapply" "GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"t" "as.vector" "init.replies" "init.game" 
"$<-" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"$" "init.replies" "init.game" 
"GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"make.replies.gi" "init.replies" "init.game" 
"$" "gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"$" "gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"order" "matrix" "make.replies.gi" "init.replies" "init.game" 
"init.replies" "init.game" 
"NCOL" "init.replies" "init.game" 
"get" "$.ListEnv" "$" "init.replies" "init.game" 
"make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"get" "$.ListEnv" "$" "NROW" "init.replies" "init.game" 
"gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"t.default" "t" "as.vector" "init.replies" "init.game" 
"t" "as.vector" "init.replies" "init.game" 
"sapply" "GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"make.replies.gi" "init.replies" "init.game" 
"$" "gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"$" "GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"make.replies.gi" "init.replies" "init.game" 
"$" "gi.x.ind.k" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"init.replies" "init.game" 
"FUN" "lapply" "init.replies" "init.game" 
"unique.default" "unique" "simplify2array" "sapply" "GridInd" "make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"FUN" "lapply" "init.replies" "init.game" 
"make.child.gi" "make.replies.gi" "init.replies" "init.game" 
"$.ListEnv" "$" "FUN" "lapply" "init.replies" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"matrix" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"is.empty" "set.g.and.tau" "init.game" 
"$" "xv.to.x" "cbind" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"get" "$.ListEnv" "$" "set.g.and.tau" "init.game" 
"deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"get" "$.ListEnv" "$" "xv.to.x" "cbind" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"$" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"is.atomic" "matrix" "make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"get" "$.ListEnv" "$" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"$" "xv.to.x" "cbind" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"cbind" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"lapply" "sapply" "make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"match" "%in%" "structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"$.ListEnv" "$" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"<" "with.floor.and.ceiling" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"with.floor.and.ceiling" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"with.floor.and.ceiling" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"get" "$.ListEnv" "$" "call.g.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"list2env" "as.environment" "copy.fun" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"+" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"parent.env.to.store" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
".deparseOpts" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
">" "with.floor.and.ceiling" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"parent.env.to.store" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"$.ListEnv" "$" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
">" "with.floor.and.ceiling" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"xv.to.x" "cbind" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"$" "call.g.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"xv.to.x" "cbind" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"match" "%in%" "structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"make.grid.matrix" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"$" "set.g.and.tau" "init.game" 
"<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"is.storing" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"cbind" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"sys.call" "all.names" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"!=" "set.g.and.tau" "init.game" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"make.grid.matrix" "set.g.and.tau" "init.game" 
"<Anonymous>" "call.g.fun" "set.g.and.tau" "init.game" 
"with.floor.and.ceiling" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"set.g.and.tau" "init.game" 
"matrix" "<Anonymous>" "call.tau.fun" "set.g.and.tau" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"$" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"$.ListEnv" "$" "make.ax.labels" "init.game" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.grid.matrix" "make.ax.labels" "init.game" 
"get" "$.ListEnv" "$" "paste" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"matrix" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"$" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"paste" "paste.matrix.cols" "make.ax.labels" "init.game" 
"simplify2array" "sapply" "make.grid.matrix" "make.ax.labels" "init.game" 
"copy.fun" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"get" "$.ListEnv" "$" "paste" "make.ax.labels" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"$" "conditionCall.condition" "conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"paste" "paste.matrix.cols" "make.ax.labels" "init.game" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"paste" "paste.matrix.cols" "make.ax.labels" "init.game" 
"$" "paste" "make.ax.labels" "init.game" 
"tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"paste" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"paste" "make.ax.labels" "init.game" 
"conditionMessage.condition" "conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"paste" "paste.matrix.cols" "make.ax.labels" "init.game" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"matrix" "make.grid.matrix" "make.ax.labels" "init.game" 
"paste" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"copy.fun" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"paste" "make.ax.labels" "init.game" 
"$<-" "make.ax.labels" "init.game" 
"nchar" "parent.env.to.store" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"$" "make.ax.labels" "init.game" 
"$" "make.ax.labels" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"rownames<-" "make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"colnames<-" "make.ax.labels" "init.game" 
"adapt.for.symmetry" "init.game" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"unlist" "adapt.for.symmetry" "init.game" 
"unique" "simplify2array" "sapply" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"get" "$.ListEnv" "$" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"lapply" "as.list.environment" "as.list" "copy.fun" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"lapply" "unlist" "adapt.for.symmetry" "init.game" 
"unlist" "adapt.for.symmetry" "init.game" 
"FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"environmentName" "nchar" "parent.env.to.store" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"stopifnot" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"eval" "eval" "force" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"+" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"+" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"+" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"$.ListEnv" "$" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"identical" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"conditionMessage" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"get" "$.ListEnv" "$" "adapt.for.symmetry" "init.game" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"get" "$.ListEnv" "$" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"get.restore.point.options" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"match.fun" "sapply" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"+" "adapt.for.symmetry" "init.game" 
"structure" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "adapt.for.symmetry" "init.game" 
"<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "adapt.for.symmetry" "init.game" 
"all.names" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"identical" "parent.env.to.store" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"unique" "simplify2array" "sapply" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"c" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"copy.fun" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"adapt.for.symmetry" "init.game" 
"FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"NROW" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"NROW" "adapt.for.symmetry" "init.game" 
"lapply" "sapply" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "adapt.for.symmetry" "init.game" 
"parent.env" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"unique" "simplify2array" "sapply" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"simplify2array" "sapply" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"unique" "simplify2array" "sapply" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"stopifnot" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"conditionCall" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "make.grid.matrix" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "FUN" "lapply" "unlist" "adapt.for.symmetry" "init.game" 
"strsplit" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"sum" ".deparseOpts" "deparse" "mode" "match" "%in%" "deparse" "<Anonymous>" "tryCatchOne" "tryCatchList" "tryCatch" "try" "store.objects" "restore.point" "grid.matrix.permutation" "adapt.for.symmetry" "init.game" 
"$" "FUN" "lapply" "sapply" "unlist" "cbind" "ind.row.matrix" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"rowSums" "all.equal" "isTRUE" "all.eq" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"<" "check.m" "init.game" 
"any" "check.m" "init.game" 
"any" "check.m" "init.game" 
"any" "check.m" "init.game" 
"any" "check.m" "init.game" 
"any" "check.m" "init.game" 
"source" 
